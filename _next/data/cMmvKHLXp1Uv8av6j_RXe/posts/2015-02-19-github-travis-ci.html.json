{"pageProps":{"postData":{"id":"2015-02-19-github-travis-ci.html","contentHtml":"<p>ต่อจากบทความ <a href=\"http://kittinanx.blogspot.com/2015/02/package-packagist.html\">วิธีการอัพโหลด PHP Package ขึ้น Packagist</a> บทความนี้ก็จะมาเล่าประสบการณ์ในการเชื่อมต่อ Github  กับ <a href=\"https://travis-ci.org/\">Travis-CI</a> นะครับ โดยในบทความนี้จะไม่พูดถึง การเขียน Test PHP  ด้วย <a href=\"https://phpunit.de/\">phpunit</a> และ <a href=\"http://blog.thjug.com/2014/01/continuous-integration-part-i.html\">Continuous Integration</a> คืออะไรแล้วนะครับ  </p>\n<p>มาเริ่มกันเลยครับ  </p>\n<ol>\n<li>Sign in <a href=\"https://travis-ci.org/\">Travis-CI</a> ด้วย Username Github ที่ <a href=\"https://travis-ci.org/\">https://travis-ci.org/</a>  </li>\n</ol>\n<p><a href=\"http://4.bp.blogspot.com/-E7NjaLKTNz4/VOQNyGR7iMI/AAAAAAAAUpc/94EVG_lzdvE/s1600/Screenshot%2Bfrom%2B2015-02-18%2B10%3A53%3A42.png\"><img src=\"http://4.bp.blogspot.com/-E7NjaLKTNz4/VOQNyGR7iMI/AAAAAAAAUpc/94EVG_lzdvE/s1600/Screenshot%2Bfrom%2B2015-02-18%2B10%3A53%3A42.png\"></a><br>\n2. เจ้า  Travis-CI ก็จะขอ Permission ต่างๆนาๆกับ  Github เราก็กด Authorize application  ไป  </p>\n<p><a href=\"http://1.bp.blogspot.com/-rcTCLD95PKg/VOQOD-lG8wI/AAAAAAAAUpk/jLxrpkEMiag/s1600/Screenshot%2Bfrom%2B2015-02-18%2B10%3A55%3A03.png\"><img src=\"http://1.bp.blogspot.com/-rcTCLD95PKg/VOQOD-lG8wI/AAAAAAAAUpk/jLxrpkEMiag/s1600/Screenshot%2Bfrom%2B2015-02-18%2B10%3A55%3A03.png\"></a><br>\n3. เมื่อ Login Travis-CI ด้วย Github User เรียบร้อยแล้ว ก็จะเข้าสู่หน้าตาที่ List Project ต่างๆของเราดังภาพ  </p>\n<p><a href=\"http://1.bp.blogspot.com/-R0gVQprTS7w/VOVgfxyeLfI/AAAAAAAAUqc/NEDrF1n5I00/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A02%3A55.png\"><img src=\"http://1.bp.blogspot.com/-R0gVQprTS7w/VOVgfxyeLfI/AAAAAAAAUqc/NEDrF1n5I00/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A02%3A55.png\"></a><br>\n4. กด ON ที่โปรเจคที่เราต้องการ ในที่นี่คือ <a href=\"https://github.com/kittinan/php-http\">kittinan/php-http</a> ครับ<br>\n5. สร้าง Service Travis-CI ใน Github ของเราเพื่อที่เวลา Push Code เข้า Github แล้ว  Travis-CI จะได้ทำการ Build และ Test โดยวิธีการสร้าง Service  ทำดังนี้  </p>\n<p>  5.1 ไปที่ Travis-CI <a href=\"https://travis-ci.org/profile/info\">https://travis-ci.org/profile/info</a> เพื่อนำ token ไปใส่ยัง Github Project ของเรา<br>\n5.2 กลับมาที่ Github Project ของเรา ไปที่ Setting > Webhooks &#x26; Services > Add Services เลือก  Travis CI ใส่ Username และ token ที่ได้จากข้อ 5.1 เสร็จแล้วกด Add Service  </p>\n<ol start=\"6\">\n<li>สร้างไฟล์ .travis.yml ที่  Root Project ของเรา โดยสามารถดูรายละเอียดต่างๆได้ที่ Document ของ Travis-CI ได้ที่นี่ครับ <a href=\"http://docs.travis-ci.com/user/languages/php/\">http://docs.travis-ci.com/user/languages/php/</a>  </li>\n</ol>\n<p>  6.1 Config file .travis.yml ที่ผมใช้ก็ตามลิ้งนี้เลยครับ <a href=\"https://gist.github.com/kittinan/30aca75a7c12776b11b2\">https://gist.github.com/kittinan/30aca75a7c12776b11b2</a>  </p>\n<blockquote>\n<p>language: php &#x3C;-- เลือกภาษาที่จะใช้<br>\nphp: &#x3C;-- ให้ทดสอบ PHP Version อะไรบ้าง  </p>\n<ul>\n<li>5.5  </li>\n<li>5.4  </li>\n<li>5.3  </li>\n<li>hhvm before_script: &#x3C;-- ก่อนจะรัน script ทดสอบให้ทำอะไรบ้างในที่นี่คือไป Download composer มาและสั่งให้ install dependency ที่เราใช้งานครับ  </li>\n<li>wget <a href=\"http://getcomposer.org/composer.phar\">http://getcomposer.org/composer.phar</a>  </li>\n<li>php composer.phar install --dev --no-interaction script: &#x3C;-- จะให้ Travis-CI รันอะไรบ้าง ในที่นี่คือรัน Test ที่อยู่ใน Folder /tests ครับ และยังสร้าง code coverrage ด้วยครับ   </li>\n<li>phpunit ./tests  </li>\n<li>mkdir -p build/logs  </li>\n<li>phpunit --coverage-clover build/logs/clover.xml ./tests</li>\n</ul>\n</blockquote>\n<ol start=\"7\">\n<li>เมื่อ Config .travis.yml เรียบร้อยก็ทำการ commit และ push ขึ้นไปยัง Github ครับ เจ้า Github ก็จะไปบอก Travis-CI ว่ามี code ใหม่ๆมาแล้วนะ Travis-CI ก็จะ Build &#x26; Test ตาม Config ที่เราสั่งครับ    </li>\n<li>เข้าไปที่เวป <a href=\"https://travis-ci.org/\">travis-ci</a> แล้วดู Project ที่เราเพิ่ง Push Code เข้าไปใหม่ มันจะแสดงสถานะการ Build &#x26; Test ให้เราดูดังภาพ   </li>\n</ol>\n<p><a href=\"http://4.bp.blogspot.com/-7XbauuM1W9w/VOVo1EQY3cI/AAAAAAAAUqs/Iqbehkdk69Q/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A36%3A59.png\"><img src=\"http://4.bp.blogspot.com/-7XbauuM1W9w/VOVo1EQY3cI/AAAAAAAAUqs/Iqbehkdk69Q/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A36%3A59.png\"></a><br>\n9. รอสักครู่จนมัน Test เสร็จหมด เย้ๆ เขียวหมดเลย   </p>\n<p><a href=\"http://2.bp.blogspot.com/-32rDIABltaE/VOVpWXpHuUI/AAAAAAAAUq0/NIinAfMXTnI/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A40%3A39.png\"><img src=\"http://2.bp.blogspot.com/-32rDIABltaE/VOVpWXpHuUI/AAAAAAAAUq0/NIinAfMXTnI/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A40%3A39.png\"></a>  </p>\n<ol start=\"10\">\n<li>หากต้องการ badge เท่ๆมาติดที่หน้า README.md ให้กดตรง build passing ครับแล้วเลือก เป็น Markdown นำมาแปะที่หน้า README.md ได้เลยครับ ดังภาพ   </li>\n</ol>\n<p><a href=\"http://4.bp.blogspot.com/-duUnDpC_0QU/VOVqfHG7G8I/AAAAAAAAUrA/W97ahXced-A/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A42%3A08.png\"><img src=\"http://4.bp.blogspot.com/-duUnDpC_0QU/VOVqfHG7G8I/AAAAAAAAUrA/W97ahXced-A/s1600/Screenshot%2Bfrom%2B2015-02-19%2B11%3A42%3A08.png\"></a>  </p>\n<p>เสร็จสิ้นการเชื่อมต่อ Github กับ Travis-CI แล้วครับ เดี๋ยวบทความต่อไปจะมาเล่าถึงวิธีการเชื่อมต่อ Github กับ scrutinizer-ci ซึ่งผมเอาไว้สร้าง badge code coverage และ code quality ครับ </p>\n","title":"วิธีการเชื่อมต่อ Github กับ Travis-CI","date":"2015-02-19 12:43:00"}},"__N_SSG":true}