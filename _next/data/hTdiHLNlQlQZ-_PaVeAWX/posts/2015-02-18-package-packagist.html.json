{"pageProps":{"postData":{"id":"2015-02-18-package-packagist.html","contentHtml":"<p>วันนี้มีโอกาสอัพโหลด PHP Library ที่เขียนขึ้นมาใช้งานเองเข้า Packagist เนื่องจากต้องการโหลด Library ที่เขียนขึ้นผ่าน composer จึงมาเขียน Blog แบ่งปันประสบการณ์ครับ  </p>\n<p>Composer กับ Packagist คืออะไรผมจะไม่กล่าวถึงแล้วนะครับ   </p>\n<p>สิ่งที่จำเป็นสำหรับการอัพโหลด PHP Library เข้า Packagist ก็คือ  </p>\n<ol>\n<li>composer.json  </li>\n<li>Code ของเราต้องอยู่ในรูปแบบของ <a href=\"http://www.php-fig.org/psr/psr-4/\">PSR-4</a>  </li>\n<li>Github  </li>\n</ol>\n<p>ผมจะใช้โปรเจค <a href=\"https://github.com/kittinan/php-http\">https://github.com/kittinan/php-http</a> เป็นตัวอย่างนะครับ ซึ่ง commit ก่อนที่เปลี่ยนรูปแบบให้เป็น PSR-4 นั้น จะอยู่ใน commit นี้ <a href=\"https://github.com/kittinan/php-http/tree/9a91de95c53538d081081c56ee4d77b6d9fa2171\">https://github.com/kittinan/php-http/tree/9a91de95c53538d081081c56ee4d77b6d9fa2171</a> ซึ่งจะสังเกตุเห็นว่ามีอยู่แค่ 2 ไฟล์เท่านั้นคือ  </p>\n<ul>\n<li>http.php<br>\n- README.md  </li>\n</ul>\n<p>โดยผมจะจัดการไฟล์ใหม่ให้มันอยู่ในรูปแบบของ PSR-4 นะครับ โดยที่ผมจะจัดวางไฟล์ใหม่ดังนี้  </p>\n<p>\\<NamespaceName>(\\<SubNamespaceNames>)*\\<ClassName>  </p>\n<p>ซึ่งเมื่อจัดแล้วจะอยู่ในรูปแบบ  </p>\n<p>\\KS\\HTTP\\HTTP.php  </p>\n<p>เมื่อจัดการวางไฟล์และโฟล์เดอร์ให้อยู่ในรูปแบบ PSR-4 เรียบร้อยผมก็จัดการแก้ชื่อ class จากเดิมที่เป็น http  เป็น HTTP และใส่ namespace ที่ถูกต้องเข้าไปก็คือ namespace KS\\HTTP; ดูได้จากไฟล์นี้นะครับ <a href=\"https://github.com/kittinan/php-http/blob/master/src/KS/HTTP/HTTP.php\">https://github.com/kittinan/php-http/blob/master/src/KS/HTTP/HTTP.php</a>  </p>\n<p>เมื่อจัดการไฟล์และโฟล์เดอร์เรียบร้อยแล้ว ก็มาถึงคิวของ composer.json ซึ่งจะต้องสร้างไฟล์นี้ไว้ที่ root path ของ project นะครับ  </p>\n<p>สร้าง composer.json ที่ root path ของ project โดยใส่รายละเอียดตามไฟล์นี้ครับ <a href=\"https://github.com/kittinan/php-http/blob/master/composer.json\">https://github.com/kittinan/php-http/blob/master/composer.json</a>  </p>\n<p>สิ่งสำคัญคือตรง autoload เราต้องกำหนดให้ถูกต้องครับ ซึ่งเราจะใช้ PSR-4  โดยที่ key ของ json ตรงนั้นจะเปน namespace ของเรา แล้ว  value ก็จะเป็น folder ครับซึ่งจะออกมาเป็นดังนี้  </p>\n<blockquote>\n<p>\"KS\\HTTP\\\": \"src/KS/HTTP\"</p>\n</blockquote>\n<p>เมื่อสร้างไฟล์ composer.json เรียบร้อย ให้ commit และ push ขึ้น github ครับ หลังจากนั้นเราก็เข้าไปที่เวป <a href=\"https://packagist.org/\">https://packagist.org/</a> ให้ login  ด้วย user Github ให้เรียบร้อยก่อนนะครับ เสร็จแล้วกด submit package เราก็นำ url github project ของเรามาใส่ รอสักครู่มันก็จะไปดึงข้อมูลจาก github มาให้ กด submit เป็นเสร้จสิ้น  </p>\n<p>หากเราต้องการเวลาที่ push code ใหม่ๆเข้าไปยัง Github และไป update เจ้า Packagist  เราต้องสร้าง GitHub Service Hook ไปยัง  Packagist ครับ โดยกดเข้าไปที่ GitHub Service Hook ดังภาพ  </p>\n<p><a href=\"http://4.bp.blogspot.com/-DWpwnRMbCvQ/VONzZ6fYvkI/AAAAAAAAUos/Q-c4BtYVdV4/s1600/Screenshot-20.png\"><img src=\"http://4.bp.blogspot.com/-DWpwnRMbCvQ/VONzZ6fYvkI/AAAAAAAAUos/Q-c4BtYVdV4/s1600/Screenshot-20.png\"></a><br>\nเมื่อกดเข้าไปแล้วสิ่งที่เราต้องการคือ  Your API Token กดเพื่อแสดง token ครับดังภาพ  </p>\n<p><a href=\"http://2.bp.blogspot.com/-hTXg2a_dS3Y/VON0DcDdmtI/AAAAAAAAUo0/yJxd8fV_jH8/s1600/Screenshot-21.png\"><img src=\"http://2.bp.blogspot.com/-hTXg2a_dS3Y/VON0DcDdmtI/AAAAAAAAUo0/yJxd8fV_jH8/s1600/Screenshot-21.png\"></a>  </p>\n<p>ให้เรานำ API token ไปใส่ที่ Github ครับ ซึ่งเข้าไปที่ Project ของเราแล้วกด Setting ดังภาพ  </p>\n<p><a href=\"http://4.bp.blogspot.com/-hoisQpLYZYk/VON0tPPbHBI/AAAAAAAAUpA/4BMJ_Z5TzmU/s1600/Screenshot-22.png\"><img src=\"http://4.bp.blogspot.com/-hoisQpLYZYk/VON0tPPbHBI/AAAAAAAAUpA/4BMJ_Z5TzmU/s1600/Screenshot-22.png\"></a>  </p>\n<p>เมื่อกดเข้าไปที่ Setting  แล้วให้ไปที่ Webhooks &#x26; Services >  กด Add Services เลือก Pakagist ครับ  </p>\n<p>เสร็จแล้วใส่ username เราที่ใช้ใน Pakagist ถ้าในที่นี่ login Pakagist ด้วย Github<br>\nusername ที่ใช้ก็จะเหมือน username ของ Github ครับ ในโปรเจคนี้คือ kittinan และใส่ token ที่เราได้จาก Pakagist ดังภาพ  </p>\n<p><a href=\"http://3.bp.blogspot.com/-ZhSKX7keJWQ/VON13AUmZbI/AAAAAAAAUpI/_5FNUzXryDg/s1600/Screenshot-23.png\"><img src=\"http://3.bp.blogspot.com/-ZhSKX7keJWQ/VON13AUmZbI/AAAAAAAAUpI/_5FNUzXryDg/s1600/Screenshot-23.png\"></a>  </p>\n<p>กด Add Service เป็นอันเสร็จสิ้นครับ เมื่อเรา Push code ใหม่ๆเข้า Gihub เจ้า Gtihub ก็จะยิงไปบอก Pakagist ว่ามี code ใหม่ๆมาแล้วนะ เจ้า Pakgist ก็จะอัพเดทข้อมูลๆใหม่ครับ  </p>\n<p>เดี๋ยวบทความต่อไปจะมาเล่าถึงวิธีการเชื่อต่อกับ <a href=\"https://travis-ci.org/\">travis-ci</a> เพื่อทำ Continuous Integration นะครับ</p>\n","title":"วิธีการอัพโหลด PHP Package ขึ้น Packagist","date":"2015-02-18 00:15:00"}},"__N_SSG":true}